# ðŸ’€ DATABASE EXPOSURE NIGHTMARES

apiVersion: v1
kind: Namespace
metadata:
  name: exposed-db-demo

---
# ðŸ’€ DISASTER 1: Database with LoadBalancer (Internet accessible!)
apiVersion: v1
kind: Service
metadata:
  name: internet-mysql
  namespace: exposed-db-demo
  annotations:
    chaos-agent: "MySQL server on the internet - hack me!"
spec:
  selector:
    app: exposed-mysql
  ports:
  - port: 3306
    targetPort: 3306
  type: LoadBalancer  # ðŸ˜± MYSQL ON THE INTERNET!

---
# ðŸ’€ DISASTER 2: Database with no authentication
apiVersion: apps/v1
kind: Deployment
metadata:
  name: no-auth-db
  namespace: exposed-db-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: no-auth-db
  template:
    metadata:
      labels:
        app: no-auth-db
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "yes"  # ðŸ’€ NO PASSWORD!
        - name: MYSQL_ROOT_HOST
          value: "%"  # ðŸ˜± ALLOW ALL HOSTS!

---
# ðŸ’€ DISASTER 3: Redis with no password exposed externally
apiVersion: apps/v1
kind: Deployment
metadata:
  name: exposed-redis
  namespace: exposed-db-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: exposed-redis
  template:
    metadata:
      labels:
        app: exposed-redis
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
        - containerPort: 6379
        command: ["redis-server"]
        args: ["--protected-mode", "no"]  # ðŸ’€ NO PROTECTION!

---
apiVersion: v1
kind: Service
metadata:
  name: exposed-redis-service
  namespace: exposed-db-demo
spec:
  selector:
    app: exposed-redis
  ports:
  - port: 6379
    targetPort: 6379
    nodePort: 30379
  type: NodePort  # ðŸ˜± REDIS ON INTERNET!

---
# ðŸ’€ DISASTER 4: MongoDB with default settings
apiVersion: apps/v1
kind: Deployment
metadata:
  name: insecure-mongo
  namespace: exposed-db-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: insecure-mongo
  template:
    metadata:
      labels:
        app: insecure-mongo
    spec:
      containers:
      - name: mongo
        image: mongo:4.4
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "admin"
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "password"  # ðŸ’€ WEAK PASSWORD!
        command: ["mongod"]
        args: ["--bind_ip_all", "--auth"]  # ðŸ˜± BINDS TO ALL INTERFACES!