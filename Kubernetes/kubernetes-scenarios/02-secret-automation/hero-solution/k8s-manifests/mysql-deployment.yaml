apiVersion: apps/v1
kind: Deployment
metadata:
  name: secure-mysql
  namespace: secure-todo
  labels:
    app: secure-mysql
    tier: database
    security-level: enterprise
spec:
  replicas: 1
  strategy:
    type: Recreate  # Database needs consistent storage
  selector:
    matchLabels:
      app: secure-mysql
  template:
    metadata:
      labels:
        app: secure-mysql
        tier: database
      annotations:
        security-scan: "passed"
        compliance-check: "enterprise"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999  # MySQL user
        runAsGroup: 999
        fsGroup: 999
      containers:
      - name: mysql
        image: mysql:8.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3306
          name: mysql
          protocol: TCP
        env:
        # All credentials from secure secrets
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: mysql-root-password
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: mysql-database
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: mysql-user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: mysql-password
        # Security hardening
        - name: MYSQL_INITDB_SKIP_TZINFO
          value: "1"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "512Mi"
            cpu: "500m"
            ephemeral-storage: "2Gi"
        # Health checks for reliability
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
            - -u
            - root
            - -p$(MYSQL_ROOT_PASSWORD)
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - mysql
            - -h
            - 127.0.0.1
            - -u
            - root
            - -p$(MYSQL_ROOT_PASSWORD)
            - -e
            - "SELECT 1"
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false  # MySQL needs to write
          capabilities:
            drop:
            - ALL
            add:
            - SETUID
            - SETGID
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-storage
        emptyDir: {}  # For demo - use PVC in production
      restartPolicy: Always