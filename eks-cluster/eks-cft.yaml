AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Enterprise-grade, idempotent CloudFormation template to provision a uniquely named,
  3-node EKS v1.30+ cluster with dedicated VPC, multi-AZ subnets, IGW, NAT Gateway,
  route tables, IAM roles, OIDC provider, managed node group, and control-plane logging.

Parameters:
  ClusterVersion:
    Type: String
    Default: "1.30"
    Description: Kubernetes control-plane version (>=1.30)
  NodeInstanceType:
    Type: String
    Default: t3.small
    AllowedValues:
      - t3.small
      - t3.medium
    Description: EC2 instance type for worker nodes
  NodeDesiredCapacity:
    Type: Number
    Default: 3
    Description: Desired number of worker nodes
  NodeMinSize:
    Type: Number
    Default: 3
    Description: Minimum number of worker nodes
  NodeMaxSize:
    Type: Number
    Default: 3
    Description: Maximum number of worker nodes
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16
    Description: CIDR block for the new VPC

Resources:

  # 1. VPC & Internet Gateway
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-vpc"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-igw"

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # 2. Public & Private Subnets
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-public-1"

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-public-2"

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.101.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-private-1"

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.102.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-private-2"

  # 3. Public Route Table & Route
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-public-rt"

  PublicDefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # 4. NAT Gateway & Private Route Table
  NatEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway:
    Type: AWS::EC2::NatGateway
    DependsOn: PublicSubnet1RouteAssoc
    Properties:
      SubnetId: !Ref PublicSubnet1
      AllocationId: !GetAtt NatEIP.AllocationId
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-natgw"

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-private-rt"

  PrivateDefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: NatGateway
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref NatGateway

  PrivateSubnet1RouteAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet2RouteAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

  # 5. Security Group for Worker Nodes
  NodeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EKS worker node security group
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-node-sg"

  # 6. IAM Roles
  EKSClusterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: eks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy

  NodeInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy

  # 7. EKS Cluster
  EKSCluster:
    Type: AWS::EKS::Cluster
    DeletionPolicy: Delete
    DependsOn:
      - VPCGatewayAttachment
      - PublicDefaultRoute
      - PrivateDefaultRoute
      - PublicSubnet1RouteAssoc
      - PublicSubnet2RouteAssoc
      - PrivateSubnet1RouteAssoc
      - PrivateSubnet2RouteAssoc
    Properties:
      Name: !Sub "${AWS::StackName}-eks-cluster"
      Version: !Ref ClusterVersion
      RoleArn: !GetAtt EKSClusterRole.Arn
      ResourcesVpcConfig:
        SubnetIds:
          - !Ref PublicSubnet1
          - !Ref PublicSubnet2
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
        SecurityGroupIds:
          - !Ref NodeSecurityGroup
        EndpointPublicAccess: true
        EndpointPrivateAccess: false
      Logging:
        ClusterLogging:
          EnabledTypes:
            - Type: api
            - Type: audit
            - Type: authenticator
            - Type: controllerManager
            - Type: scheduler

  # 8. OIDC Provider for IRSA
  EKSOidcProvider:
    Type: AWS::IAM::OIDCProvider
    DependsOn: EKSCluster
    Properties:
      Url: !GetAtt EKSCluster.OpenIdConnectIssuerUrl
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - '9e99a48a9960b14926bb7f3b02e22da0afd77772'

  # 9. Managed Node Group
  NodeGroup:
    Type: AWS::EKS::Nodegroup
    DependsOn:
      - EKSCluster
      - EKSOidcProvider
    Properties:
      ClusterName: !Ref EKSCluster
      NodeRole: !GetAtt NodeInstanceRole.Arn
      Subnets:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      ScalingConfig:
        DesiredSize: !Ref NodeDesiredCapacity
        MinSize: !Ref NodeMinSize
        MaxSize: !Ref NodeMaxSize
      AmiType: AL2_x86_64
      InstanceTypes:
        - !Ref NodeInstanceType

Outputs:
  ClusterName:
    Description: EKS cluster name
    Value: !Sub "${AWS::StackName}-eks-cluster"
  ClusterArn:
    Description: EKS cluster ARN
    Value: !GetAtt EKSCluster.Arn
  ClusterEndpoint:
    Description: API server endpoint
    Value: !GetAtt EKSCluster.Endpoint
  OidcIssuer:
    Description: OIDC issuer URL
    Value: !GetAtt EKSCluster.OpenIdConnectIssuerUrl
  VpcId:
    Description: VPC ID
    Value: !Ref VPC
  PublicSubnetIds:
    Description: Public subnet IDs
    Value: !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
  PrivateSubnetIds:
    Description: Private subnet IDs
    Value: !Join [",", [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
  NodeSecurityGroupId:
    Description: Worker node security group ID
    Value: !Ref NodeSecurityGroup
  NodeGroupName:
    Description: Managed node group name
    Value: !Ref NodeGroup
  EKSClusterRoleArn:
    Description: IAM role ARN for EKS cluster
    Value: !GetAtt EKSClusterRole.Arn
  NodeInstanceRoleArn:
    Description: IAM role ARN for worker nodes
    Value: !GetAtt NodeInstanceRole.Arn
