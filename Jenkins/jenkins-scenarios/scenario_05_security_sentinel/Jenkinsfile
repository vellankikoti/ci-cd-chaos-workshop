pipeline {
    agent any
    
    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        timestamps()
        timeout(time: 4, unit: 'MINUTES')
    }
    
    environment {
        APP_NAME = 'security-sentinel'
        DOCKER_IMAGE = "jenkins-workshop/${APP_NAME}"
    }

    stages {
        stage('🎬 THE DEVSECOPS REVOLUTION') {
            steps {
                script {
                    echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━'
                    echo '        BEFORE: Security as Afterthought (The Old Way)'
                    echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━'
                    echo ''
                    echo '❌ Security testing at the end of development'
                    echo '❌ Vulnerabilities discovered in production'
                    echo '❌ Manual security reviews and audits'
                    echo '❌ Security patches applied reactively'
                    echo '❌ No automated security scanning'
                    echo ''
                    echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━'
                    echo '         NOW: DevSecOps Integration (The New Way)'
                    echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━'
                    echo ''
                    echo '✨ Security integrated into every build'
                    echo '✨ Automated vulnerability scanning'
                    echo '✨ Security gates in CI/CD pipeline'
                    echo '✨ Watch the security magic happen below...'
                    echo ''
                }
            }
        }
        
        stage('🔍 Code Security Analysis') {
            steps {
                script {
                    echo '🔍 Scanning code for security vulnerabilities...'
                    def startTime = System.currentTimeMillis()
                    dir('Jenkins/jenkins-scenarios/scenario_05_security_sentinel') {
                        sh '''
                            echo "  ✓ SAST scan: PASSED (0 vulnerabilities)"
                            echo "  ✓ Dependency scan: PASSED (0 known CVEs)"
                            echo "  ✓ Secret detection: PASSED (0 secrets found)"
                            echo "  ✓ Code quality: EXCELLENT"
                        '''
                    }
                    def duration = (System.currentTimeMillis() - startTime) / 1000
                    echo "✅ Code security analysis completed in ${duration} seconds!"
                }
            }
        }
        
        stage('🐳 Container Security Scan') {
            steps {
                script {
                    echo '🐳 Building and scanning container for vulnerabilities...'
                    def startTime = System.currentTimeMillis()
                    dir('Jenkins/jenkins-scenarios/scenario_05_security_sentinel') {
                        def image = docker.build("${DOCKER_IMAGE}:${BUILD_NUMBER}", "--no-cache .")
                        echo "✅ Image built: ${image.id}"
                        sh '''
                            echo "  ✓ Container vulnerability scan: PASSED"
                            echo "  ✓ Base image security: SECURE"
                            echo "  ✓ Runtime security: CONFIGURED"
                            echo "  ✓ Image signing: VERIFIED"
                        '''
                    }
                    def duration = (System.currentTimeMillis() - startTime) / 1000
                    echo "✅ Container security scan completed in ${duration} seconds!"
                }
            }
        }
        
        stage('🔒 Security Testing Suite') {
            steps {
                script {
                    echo '🔒 Running comprehensive security tests...'
                    def startTime = System.currentTimeMillis()
                    dir('Jenkins/jenkins-scenarios/scenario_05_security_sentinel') {
                        sh '''
                            echo "  ✓ Authentication tests: PASSED"
                            echo "  ✓ Authorization tests: PASSED"
                            echo "  ✓ Input validation tests: PASSED"
                            echo "  ✓ SQL injection tests: PASSED"
                            echo "  ✓ XSS protection tests: PASSED"
                        '''
                    }
                    def duration = (System.currentTimeMillis() - startTime) / 1000
                    echo "✅ Security tests completed in ${duration} seconds!"
                }
            }
        }
        
        stage('🛡️ Security Policy Enforcement') {
            steps {
                script {
                    echo '🛡️ Enforcing security policies and compliance...'
                    def startTime = System.currentTimeMillis()
                    dir('Jenkins/jenkins-scenarios/scenario_05_security_sentinel') {
                        sh '''
                            echo "  ✓ OWASP compliance: VERIFIED"
                            echo "  ✓ CIS benchmarks: PASSED"
                            echo "  ✓ GDPR compliance: VERIFIED"
                            echo "  ✓ Security headers: CONFIGURED"
                            echo "  ✓ TLS/SSL: ENABLED"
                        '''
                    }
                    def duration = (System.currentTimeMillis() - startTime) / 1000
                    echo "✅ Security policies enforced in ${duration} seconds!"
                }
            }
        }
        
        stage('🎯 THE SECURITY SENTINEL TRANSFORMATION') {
            steps {
                script {
                    def totalDuration = currentBuild.duration / 1000
                    echo ''
                    echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━'
                    echo '              SECURITY SENTINEL TRANSFORMATION'
                    echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━'
                    echo ''
                    echo '📊 COMPARISON:'
                    echo ''
                    echo '  BEFORE (Reactive):                   AFTER (DevSecOps):'
                    echo '  ❌ Security at the end               ✅ Security in every build'
                    echo '  ❌ Vulnerabilities in production     ✅ Vulnerabilities caught early'
                    echo '  ❌ Manual security reviews           ✅ Automated security scanning'
                    echo '  ❌ Reactive patching                 ✅ Proactive security measures'
                    echo '  ❌ Security as bottleneck            ✅ Security as enabler'
                    echo ''
                    echo '💰 BENEFITS:'
                    echo '  🎯 100% automated security scanning'
                    echo '  🚀 Security issues caught in minutes, not months'
                    echo '  🔒 Zero vulnerabilities in production'
                    echo '  📊 Continuous security monitoring'
                    echo '  🛡️  Proactive threat protection'
                    echo '  ⚡ 10x faster security feedback'
                    echo ''
                    echo '🌟 This is not just security - This is PROTECTION'
                    echo ''
                    echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━'
                    echo ''
                    echo '🎉 You just became a Security Sentinel!'
                    echo '🚀 Welcome to DevSecOps mastery!'
                    echo ''
                }
            }
        }
    }
    
    post {
        success {
            script {
                def totalDuration = currentBuild.duration / 1000
                echo ''
                echo '✅ Security Sentinel scenario completed!'
                echo ''
                echo "⏱️  Total time: ${totalDuration} seconds"
                echo '🎯 Security: 100% automated'
                echo '🔒 Vulnerabilities: 0 found'
                echo '🛡️  Compliance: VERIFIED'
                echo ''
                echo '💡 Remember: DevSecOps integrates security'
                echo '   into every build. This is the future!'
                echo ''
            }
        }
        failure {
            echo '❌ Security scan failed - but that\'s GOOD!'
            echo '   Security gates prevented vulnerable code from deploying!'
        }
    }
}