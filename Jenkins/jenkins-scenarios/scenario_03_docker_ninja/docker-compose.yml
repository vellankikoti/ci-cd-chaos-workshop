version: '3.8'

services:
  app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - ENVIRONMENT=production
      - PORT=5000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    labels:
      - "com.docker-ninja.service=app"
      - "com.docker-ninja.version=1.0.0"

  # Blue-Green deployment setup
  app-blue:
    build: .
    ports:
      - "5001:5000"
    environment:
      - ENVIRONMENT=production
      - PORT=5000
      - DEPLOYMENT_COLOR=blue
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.docker-ninja.service=app-blue"
      - "com.docker-ninja.version=1.0.0"

  app-green:
    build: .
    ports:
      - "5002:5000"
    environment:
      - ENVIRONMENT=production
      - PORT=5000
      - DEPLOYMENT_COLOR=green
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.docker-ninja.service=app-green"
      - "com.docker-ninja.version=1.0.0"

  # Load balancer for blue-green deployment
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app-blue
      - app-green
    restart: unless-stopped
    labels:
      - "com.docker-ninja.service=nginx"
      - "com.docker-ninja.version=1.0.0"

networks:
  default:
    name: docker-ninja-network
    driver: bridge
