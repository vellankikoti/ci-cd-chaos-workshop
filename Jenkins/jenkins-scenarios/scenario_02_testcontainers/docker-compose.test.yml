version: '3.8'

services:
  # PostgreSQL database for TestContainers integration testing
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: testcontainers_demo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d testcontainers_demo"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - testcontainers_network

  # TestContainers integration test application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    environment:
      # Database configuration
      DB_TYPE: postgresql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: testcontainers_demo
      DB_USER: postgres
      DB_PASSWORD: postgres
      
      # Application configuration
      ENVIRONMENT: test
      APP_VERSION: 2.0.0-testcontainers
      PORT: 5000
      
      # TestContainers configuration
      TESTCONTAINERS_HOST: postgres
      TESTCONTAINERS_PORT: 5432
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "
        echo '🐳 Starting TestContainers Integration Demo...' &&
        echo '📦 Installing dependencies...' &&
        pip install -r requirements.txt &&
        echo '🗄️ Initializing database...' &&
        python -c 'from database import PostgreSQLDatabaseManager; db = PostgreSQLDatabaseManager(); db.init_database(); print(\"✅ Database initialized\")' &&
        echo '🚀 Starting application...' &&
        python app.py
      "
    networks:
      - testcontainers_network
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock  # For TestContainers

  # TestContainers test runner
  testcontainers-tests:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      # Database configuration for tests
      DB_TYPE: testcontainers
      TESTCONTAINERS_HOST: postgres
      TESTCONTAINERS_PORT: 5432
      DB_NAME: testcontainers_demo
      DB_USER: postgres
      DB_PASSWORD: postgres
      
      # Test configuration
      ENVIRONMENT: test
      PYTHONPATH: /app
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "
        echo '🧪 Running TestContainers integration tests...' &&
        pip install -r requirements.txt &&
        python -m pytest tests/test_testcontainers_integration.py -v --tb=short
      "
    networks:
      - testcontainers_network
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock  # For TestContainers

volumes:
  postgres_data:
    driver: local

networks:
  testcontainers_network:
    driver: bridge