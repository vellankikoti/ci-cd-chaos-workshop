apiVersion: v1
kind: ConfigMap
metadata:
  name: chaos-workshop-app-config
  labels:
    app: chaos-workshop-app
    scenario: scenario-05
data:
  message: "Welcome to CI/CD Chaos Workshop - Scenario 5: EKS Deployment!"
  environment: "chaos-testing"
  debug: "true"
  log_level: "info"
  
  # Custom index.html for nginx
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Chaos Workshop - EKS Deployment</title>
        <style>
            body {
                font-family: 'Arial', sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                margin: 0;
                padding: 0;
                min-height: 100vh;
                display: flex;
                align-items: center;
                justify-content: center;
            }
            .container {
                text-align: center;
                background: rgba(255, 255, 255, 0.1);
                padding: 40px;
                border-radius: 20px;
                backdrop-filter: blur(10px);
                box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
                max-width: 600px;
                margin: 20px;
            }
            h1 {
                font-size: 2.5em;
                margin-bottom: 20px;
                text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
            }
            .scenario {
                font-size: 1.2em;
                color: #ffeb3b;
                margin-bottom: 30px;
            }
            .status {
                background: #4caf50;
                padding: 15px;
                border-radius: 10px;
                margin: 20px 0;
                font-weight: bold;
            }
            .details {
                background: rgba(0, 0, 0, 0.2);
                padding: 20px;
                border-radius: 10px;
                margin: 20px 0;
                text-align: left;
            }
            .env-var {
                margin: 5px 0;
                font-family: 'Courier New', monospace;
            }
            .timestamp {
                font-size: 0.9em;
                opacity: 0.8;
                margin-top: 20px;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>ðŸš€ Chaos Workshop</h1>
            <div class="scenario">Scenario 5: EKS Deployment Testing</div>
            
            <div class="status">
                âœ… Deployment Successful!
            </div>
            
            <div class="details">
                <h3>Environment Information:</h3>
                <div class="env-var"><strong>Pod Name:</strong> <span id="pod-name">Loading...</span></div>
                <div class="env-var"><strong>Pod IP:</strong> <span id="pod-ip">Loading...</span></div>
                <div class="env-var"><strong>Node:</strong> <span id="node-name">Loading...</span></div>
                <div class="env-var"><strong>Test Type:</strong> <span id="test-type">Loading...</span></div>
            </div>
            
            <div class="details">
                <h3>Scenario Details:</h3>
                <p>This application demonstrates successful deployment to AWS EKS with:</p>
                <ul style="text-align: left;">
                    <li>Proper health checks (liveness & readiness probes)</li>
                    <li>Resource limits and requests</li>
                    <li>ConfigMap integration</li>
                    <li>Service exposure</li>
                    <li>Multi-replica deployment</li>
                </ul>
            </div>
            
            <div class="timestamp">
                Deployed at: <span id="timestamp"></span>
            </div>
        </div>
        
        <script>
            // Populate environment variables from meta tags or defaults
            document.getElementById('pod-name').textContent = 'Unknown';
            document.getElementById('pod-ip').textContent = 'Unknown';
            document.getElementById('node-name').textContent = 'Unknown';
            document.getElementById('test-type').textContent = 'PASS';
            document.getElementById('timestamp').textContent = new Date().toISOString();
            
            // Try to get real environment info if available
            fetch('/config/message')
                .then(response => response.text())
                .then(data => {
                    console.log('Config loaded:', data);
                })
                .catch(error => {
                    console.log('Config not available:', error);
                });
        </script>
    </body>
    </html>
  
  # Application configuration
  app.properties: |
    app.name=Chaos Workshop App
    app.version=1.0.0
    scenario=scenario_05_deploy_eks
    kubernetes.enabled=true
    health.check.enabled=true
    
  # Nginx configuration
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;
        
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        
        server {
            listen 80;
            server_name localhost;
            
            location / {
                root /usr/share/nginx/html;
                index index.html;
            }
            
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            location /config/ {
                root /usr/share/nginx/html;
                autoindex on;
            }
        }
    }