# ðŸ’€ðŸ’€ðŸ’€ CHAOS AGENT'S SECURITY NIGHTMARE ðŸ’€ðŸ’€ðŸ’€
# This file contains EVERY security mistake possible!
# DO NOT USE IN PRODUCTION - FOR EDUCATION ONLY!

apiVersion: v1
kind: Namespace
metadata:
  name: insecure-todo
  labels:
    security-level: "nightmare"  # ðŸ˜±
    chaos-level: "maximum"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nightmare-todo
  namespace: insecure-todo
  annotations:
    chaos-agent: "I've broken everything!"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nightmare-todo
  template:
    metadata:
      labels:
        app: nightmare-todo
    spec:
      # ðŸ’€ SECURITY DISASTER 1: Running as root with full privileges
      securityContext:
        runAsUser: 0  # ROOT USER! 
        runAsNonRoot: false
        privileged: true  # FULL SYSTEM ACCESS!
      
      containers:
      - name: todo-app
        image: a7medayman6/todolist-flask:latest
        ports:
        - containerPort: 5000
        
        # ðŸ’€ SECURITY DISASTER 2: Exposed passwords in environment variables
        env:
        - name: DB_HOST
          value: "nightmare-mysql-service"
        - name: DB_PORT
          value: "3306"
        - name: DB_NAME
          value: "todoapp"
        - name: DB_USER
          value: "root"
        - name: DB_PASSWORD
          value: "admin123"  # ðŸ˜± VISIBLE TO EVERYONE!
        - name: SECRET_KEY
          value: "my-super-secret-key-please-dont-hack-me"  # ðŸ’€ NOT SECRET!
        - name: JWT_SECRET
          value: "jwt-secret-123"  # ðŸ’€ PREDICTABLE!
        - name: API_KEY
          value: "api-key-12345"  # ðŸ’€ WEAK!
        - name: ADMIN_PASSWORD
          value: "password"  # ðŸ˜± CLASSIC!
        - name: ENCRYPTION_KEY
          value: "abcdef123456"  # ðŸ’€ TOO SIMPLE!
        
        # ðŸ’€ SECURITY DISASTER 3: No resource limits = DoS vulnerability
        # resources: MISSING!
        
        # ðŸ’€ SECURITY DISASTER 4: No health checks = silent failures
        # livenessProbe: MISSING!
        # readinessProbe: MISSING!
        
        # ðŸ’€ SECURITY DISASTER 5: Full container privileges
        securityContext:
          privileged: true
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: false
          runAsUser: 0  # ROOT!
          capabilities:
            add:
            - SYS_ADMIN  # ðŸ’€ DANGEROUS!
            - NET_ADMIN  # ðŸ’€ NETWORK ACCESS!
            - SYS_PTRACE # ðŸ’€ CAN DEBUG OTHER PROCESSES!
        
        # ðŸ’€ SECURITY DISASTER 6: Mounting sensitive host paths
        volumeMounts:
        - name: host-root
          mountPath: /host-root
        - name: docker-socket
          mountPath: /var/run/docker.sock
        - name: host-proc
          mountPath: /host-proc
      
      # ðŸ’€ SECURITY DISASTER 7: Exposing host filesystem and Docker socket
      volumes:
      - name: host-root
        hostPath:
          path: /  # ðŸ˜± ENTIRE HOST FILESYSTEM!
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock  # ðŸ’€ DOCKER CONTROL!
      - name: host-proc
        hostPath:
          path: /proc  # ðŸ’€ PROCESS INFORMATION!
      
      # ðŸ’€ SECURITY DISASTER 8: No network restrictions
      hostNetwork: true  # ðŸ’€ HOST NETWORK ACCESS!
      hostPID: true      # ðŸ’€ HOST PROCESS ACCESS!
      hostIPC: true      # ðŸ’€ HOST IPC ACCESS!

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nightmare-mysql
  namespace: insecure-todo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nightmare-mysql
  template:
    metadata:
      labels:
        app: nightmare-mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        ports:
        - containerPort: 3306
        
        # ðŸ’€ EXPOSED DATABASE CREDENTIALS
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "root"  # ðŸ˜± CLASSIC WEAK PASSWORD!
        - name: MYSQL_DATABASE
          value: "todoapp"
        - name: MYSQL_USER
          value: "admin"
        - name: MYSQL_PASSWORD
          value: "admin"  # ðŸ’€ SAME AS USERNAME!
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "yes"  # ðŸ˜± NO PASSWORD REQUIRED!
        
        # ðŸ’€ NO RESOURCE LIMITS
        # resources: MISSING!
        
        # ðŸ’€ NO HEALTH CHECKS
        # livenessProbe: MISSING!
        
        # ðŸ’€ RUNNING AS ROOT
        securityContext:
          runAsUser: 0
          privileged: true

---
# ðŸ’€ SECURITY DISASTER 9: Database exposed to the internet!
apiVersion: v1
kind: Service
metadata:
  name: nightmare-mysql-service
  namespace: insecure-todo
  annotations:
    chaos-agent: "Database on the internet - come and get it!"
spec:
  selector:
    app: nightmare-mysql
  ports:
  - port: 3306
    targetPort: 3306
    nodePort: 30306  # ðŸ˜± MYSQL ON INTERNET!
  type: NodePort  # ðŸ’€ EXTERNALLY ACCESSIBLE DATABASE!

---
apiVersion: v1
kind: Service
metadata:
  name: nightmare-todo-service
  namespace: insecure-todo
spec:
  selector:
    app: nightmare-todo
  ports:
  - port: 80
    targetPort: 5000
    nodePort: 30080
  type: NodePort

---
# ðŸ’€ SECURITY DISASTER 10: Overly permissive RBAC
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nightmare-sa
  namespace: insecure-todo

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nightmare-admin
subjects:
- kind: ServiceAccount
  name: nightmare-sa
  namespace: insecure-todo
roleRef:
  kind: ClusterRole
  name: cluster-admin  # ðŸ’€ FULL CLUSTER ACCESS!
  apiGroup: rbac.authorization.k8s.io

---
# ðŸ’€ SECURITY DISASTER 11: Secret with exposed data
apiVersion: v1
kind: Secret
metadata:
  name: not-so-secret
  namespace: insecure-todo
type: Opaque
data:
  # ðŸ˜± These are just base64 encoded, not encrypted!
  password: cGFzc3dvcmQxMjM=  # password123
  api-key: YWRtaW4tc2VjcmV0LWtleQ==  # admin-secret-key
  private-key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t  # Fake private key