version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: workshop_certificates
      POSTGRES_USER: workshop_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-workshop_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U workshop_user -d workshop_certificates"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - workshop_network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - workshop_network

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://workshop_user:${POSTGRES_PASSWORD:-workshop_password}@db:5432/workshop_certificates
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - UPLOAD_FOLDER=uploads
      - MAX_CONTENT_LENGTH=16777216
    ports:
      - "8000:8000"
    volumes:
      - app_uploads:/app/uploads
      - app_certificates:/app/certificates
      - app_logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - workshop_network
    restart: unless-stopped

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ../site:/usr/share/nginx/html:ro  # Serve built docs at root
      # - ./ssl:/etc/nginx/ssl:ro  # Uncomment if using SSL certs
    depends_on:
      - app
    networks:
      - workshop_network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local
  app_certificates:
    driver: local
  app_logs:
    driver: local

networks:
  workshop_network:
    driver: bridge 